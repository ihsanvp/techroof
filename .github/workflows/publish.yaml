name: Publish

env:
  NODE_VERSION: 14

on:
  push:
    branches:
      - "release/**"

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get Version
        uses: nyaa8/package-version@v1

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('v{0}', env.PACKAGE_VERSION) }}
          release_name: ${{ format('Release v{0}', env.PACKAGE_VERSION) }}
          body: "See the assets to download this version and install."
          draft: true
          prerelease: false

      - run: echo "${{ steps.create_release.outputs.upload_url }}" > release-url.txt
      - uses: actions/upload-artifact@v1
        with:
          name: release-url
          path: ./release-url.txt

      - run: echo "${{ steps.create_release.outputs.id }}" > release-id.txt
      - uses: actions/upload-artifact@v1
        with:
          name: release-id
          path: ./release-id.txt

  upload-assets:
    needs: create-release
    name: Upload assets for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            asset: src-tauri/target/release/bundle/msi/techroof*.msi*
          - os: ubuntu-latest
            asset: src-tauri/target/release/bundle/appimage/techroof*.AppImage*
          - os: macos-latest
            asset: src-tauri/target/release/bundle/osx/techroof*.app*

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download file with upload url
        uses: actions/download-artifact@v1
        with:
          name: release-url

      - name: Set upload url ENV
        shell: bash
        run: echo "RELEASE_UPLOAD_URL=$(cat ./release-url/release-url.txt)" >> $GITHUB_ENV

      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install webkit2gtk
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0

      - name: Build Application
        run: |
          cargo install tauri-bundler
          yarn install
          yarn tauri build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.SIGNING_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: ${{ matrix.asset }}

  publish-release:
    needs: [create-release, upload-assets]
    name: Publish Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download file with release id
        uses: actions/download-artifact@v1
        with:
          name: release-id

      - name: Set release id ENV
        shell: bash
        run: echo "RELEASE_ID=$(cat ./release-id/release-id.txt)" >> $GITHUB_ENV

      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ env.RELEASE_ID }}
